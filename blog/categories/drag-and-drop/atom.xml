<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: drag and drop | Niels Dequeker]]></title>
  <link href="http://voles.github.io/blog/categories/drag-and-drop/atom.xml" rel="self"/>
  <link href="http://voles.github.io/"/>
  <updated>2015-07-08T19:56:07+02:00</updated>
  <id>http://voles.github.io/</id>
  <author>
    <name><![CDATA[Niels Dequeker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Drag &amp; drop with AIR]]></title>
    <link href="http://voles.github.io/blog/2011/10/18/drag-and-drop-with-air/"/>
    <updated>2011-10-18T10:52:00+02:00</updated>
    <id>http://voles.github.io/blog/2011/10/18/drag-and-drop-with-air</id>
    <content type="html"><![CDATA[<p>This is a small blogpost on how to implement drag and drop functionality in an AIR-application. It can be used to make an application much more easier to work with.</p>

<p>At first, you have to add two event listeners to the component, <code>NATIVE_DRAG_ENTER</code> and <code>NATIVE_DRAG_DROP</code>. Both of them are <code>NativeDragEvents</code>.</p>

<p>{% codeblock lang:as3 %}
addEventListener(NativeDragEvents. NATIVE_DRAG_ENTER, nativedragenterHandler);
addEventListener(NativeDragEvents. NATIVE_DRAG_DROP, nativedragdropHandler);
{% endcodeblock %}</p>

<p>The <code>nativedragenterHandler</code> will be triggered whenever a user hovers the component with one or more files selected. The <code>nativedragdropHandler</code> will be triggered when the user ‘drops’ his files on this component.</p>

<p>Put this code in the <code>nativedragenterHandler</code>, to let the component accept a user to drop his files here.</p>

<p>{% codeblock lang:as3 %}
DragManager.acceptDragDrop(this);
{% endcodeblock %}</p>

<p>Everything else happens in the <code>nativedragdropHandler</code>. The code below shows you how to fetch the dropped files, so you can work with them in the application.</p>

<p>{% codeblock lang:as3 %}
var droppedFiles:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
